/*
Switch component styles.

@description Provides a flexible, customizable toggle switch component with various states, sizes, and styles for form inputs with consistent styling.

@layer components - Applies styles at the component layer of the CSS cascade.

@property {string} --switch-height - Controls the overall height of the switch
@property {string} --switch-width - Controls the overall width of the switch
@property {string} --switch-margin - Margin applied to the switch
@property {string} --switch-thumb-start - Starting position of the switch thumb
@property {string} --switch-thumb-size - Size of the switch thumb
@property {string} --switch-bg - Background color of the switch
@property {string} --switch-thumb-bg - Background color of the switch thumb
@property {string} --switch-border - Border color of the switch
@property {string} --switch-focus-outline - Outline color when switch is focused
@property {string} --switch-focus-border - Border color when switch is focused
@property {string} --switch-invalid-bg - Background color when switch is invalid
@property {string} --switch-invalid-border - Border color when switch is invalid
@property {string} --switch-color - Color of the switch when checked
@property {string} --switch-checked-color - Color of the switch thumb when checked
@property {string} --switch-checked-outline - Border color of the switch for outline variant when checked
*/
@layer components {
    .switch {
        /* modifiers */
        --switch-height: --spacing(4.5);
        --switch-width: calc(var(--switch-height) * 1.8);
        --switch-margin: 0.2em;

        --switch-thumb-start: --spacing(0.3);
        --switch-thumb-size: calc(var(--switch-height) - --spacing(1));

        --switch-bg: var(--color-base-border);
        --switch-border-width: var(--border-width);

        --switch-focus-outline: color-mix(in oklab, var(--input-color, var(--color-accent)) 40%, transparent);
        --switch-focus-border: var(--color-accent);
        
        --switch-invalid-bg: color-mix(in oklab, var(--color-danger) 25%, var(--color-base-background));
        --switch-invalid-border: var(--color-danger);

        /* layout */
        appearance: none;
        cursor: pointer;
        position: relative;

        /* dimensions */
        block-size: var(--switch-height);
        min-inline-size: var(--switch-width);
        inset-block-start: var(--switch-margin);

        /* colors */
        border: var(--switch-border-width) solid var(--switch-border, color-mix(in oklab, var(--color-base-dense) 60%, transparent));
        border-radius: var(--switch-height);
        outline: 0px solid var(--switch-focus-outline);
        outline-offset: 0px;
        background-color: var(--switch-bg);
        box-shadow: var(--inset-dent), var(--shadow-low);

        /* animation */
        transition-property: background-color, border-color, box-shadow, outline;
        transition-duration: var(--tt-duration, var(--default-transition-duration));
        transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));

        /* thumb */
        &::before {
            /* layout */
            content: "";
            position: absolute;

            /* dimensions */
            inset-block-start: 50%;
            inset-inline-start: var(--switch-thumb-start);
            transform: translateY(-50%);
            block-size: var(--switch-thumb-size);
            inline-size: var(--switch-thumb-size);
            border-radius: calc(infinity * 1px);

            /* colors */
            background-color: var(--switch-thumb-bg, var(--color-base));
            box-shadow: var(--shadow-low), var(--shadow-low);

            /* animation */
            transition-property: background-color, box-shadow, transform;
            transition-duration: var(--tt-duration, var(--default-transition-duration));
            transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));
        }

        @media (hover: hover) {
            &:hover {
                background-color: color-mix(in oklab, var(--switch-bg), var(--color-base-foreground) 6%);
                --switch-checked-outline: color-mix(in oklab, var(--color-base-dense), var(--color-base) 20%);
            }
        }

        &:active {
            box-shadow: none;
            --switch-checked-outline: color-mix(in oklab, var(--color-base-dense), var(--color-base) 40%);

            &::before {
                box-shadow: none;
            }
        }

        &:checked {
            --switch-bg: var(--switch-color, var(--color-base-dense));
            --switch-thumb-bg: var(--switch-checked-color, var(--color-base));
            --switch-checked-outline: var(--switch-color, var(--color-base-dense));

            /* slide thumb */
            &::before {
                transform: translate(calc(var(--switch-width) - var(--switch-thumb-size) - --spacing(1)), -50%);
            }
        }

        /* disabled */
        &:is(:disabled, [disabled]) {
            cursor: not-allowed;

            /* colors */
            background-color: color-mix(in oklab, var(--switch-bg) 40%, transparent);
            border-color: color-mix(in oklab, var(--switch-border, var(--color-base-dense)) 30%, transparent);
            box-shadow: none;

            &::before {
                background-color: color-mix(in oklab, var(--switch-thumb-bg, var(--color-base)) 50%, var(--color-base));
            }
        }

        /* focus */
        &:focus-visible {
            outline-width: 2px;
            --switch-border: var(--switch-focus-border);
        }

        /* validate */
        &.switch-validate:user-invalid,
        &.switch-invalid:not(:checked) {
            /* colors */
            --switch-border: var(--switch-invalid-border);
            --switch-bg: var(--switch-invalid-bg);
        }

        /* enclosing label */
        label:has(&) {
            /* layout */
            cursor: pointer;
            display: inline-flex;
            align-items: start;
            justify-content: start;
            gap: --spacing(2);
        }
    }

    .switch-inline {
        display: flex;
        flex-direction: row;
        gap: --spacing(4);
    }

    .switch-list {
        display: flex;
        flex-direction: column;
        gap: --spacing(2);
    }

    /* variations */
    .switch.switch-outline,
    .switch.switch-outline-bold {
        /* colors */
        --switch-bg: none;
        --switch-border: var(--switch-checked-outline);
        --switch-thumb-bg: var(--switch-checked-outline, var(--color-base-border));
        box-shadow: none;

        &::before {
            /* colors */
            box-shadow: none;
        }
    }

    .switch-outline-bold {
        border-width: calc(var(--switch-border-width) * 2);

        /* modifiers */
        --switch-thumb-start: --spacing(0.5);
        --switch-thumb-size: calc(var(--switch-height) - --spacing(2));

        /* checked */
        &:checked {
            &::before {
                transform: translate(calc(var(--switch-width) - var(--switch-thumb-size) - --spacing(2)), -50%);
            }
        }
    }

    .switch-solid {
        /* colors */
        --switch-bg: var(--color-base-border);
        --switch-border: transparent;
        box-shadow: none;
    }

    /* colors */
    .switch-primary {
        --switch-color: var(--color-primary);
        --switch-checked-color: var(--color-primary-content);
    }
    .switch-accent {
        --switch-color: var(--color-accent);
        --switch-checked-color: var(--color-accent-content);
    }
    .switch-warning {
        --switch-color: var(--color-warning);
        --switch-checked-color: var(--color-warning-content);
    }
    .switch-danger {
        --switch-color: var(--color-danger);
        --switch-checked-color: var(--color-danger-content);
    }
    .switch-success {
        --switch-color: var(--color-success);
        --switch-checked-color: var(--color-success-content);
    }

    /* sizes */
    .switch-xs {
        --switch-height: --spacing(3);

        label:has(&) {
            font-size: var(--text-xs);
        }
    }

    .switch-sm {
        --switch-height: --spacing(3.5);

        label:has(&) {
            font-size: var(--text-sm);
        }
    }

    .switch-lg {
        --switch-height: --spacing(6);
        --switch-margin: 0.1em;

        label:has(&) {
            font-size: var(--text-lg);
            line-height: var(--text-2xl--line-height);
        }
    }

    .switch-xl {
        --switch-height: --spacing(7);
        --switch-margin: 0em;

        label:has(&) {
            font-size: var(--text-xl);
            line-height: var(--text-xl--line-height);
        }
    }

    .switch-2xl {
        --switch-height: --spacing(8);
        --switch-margin: 0em;

        label:has(&) {
            font-size: var(--text-2xl);
            line-height: var(--text-2xl--line-height);
        }
    }
}
