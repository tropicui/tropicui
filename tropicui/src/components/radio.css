@layer components {
    .radio {
        /* layout */
        position: relative;
        appearance: none;
        cursor: pointer;

        /* dimensions */
        block-size: var(--radio-size);
        min-inline-size: var(--radio-size);

        /* colors */
        border: 1px solid var(--radio-border);
        border-radius: 50%;
        outline: 0px solid var(--radio-focus-outline);
        outline-offset: 0px;
        background-color: var(--radio-bg);
        box-shadow: var(--shadow-xs);

        /* modifiers */
        --radio-size: --spacing(4.5);
        --radio-bg: var(--color-neutral-50);
        --radio-border: color-mix(in oklab, var(--color-black) 15%, transparent);
        --radio-focus-outline: var(--color-blue-200);
        --radio-focus-border: var(--color-blue-400);
        --radio-outline-border: var(--color-neutral-300);
        --radio-outline-disabled-border: var(--color-neutral-200);
        --radio-invalid-bg: var(--color-red-50);
        --radio-invalid-border: var(--color-red-400);

        /* animation */
        transition-property: background-color, border-color;
        transition-duration: var(--tt-duration, var(--default-transition-duration));
        transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));

        &::before {
            content: "";
            opacity: 0;
            display: block;
            position: absolute;
            inset-block-start: 50%;
            inset-inline-start: 50%;
            transform: translate(-50%, -50%);
            block-size: calc(var(--radio-size) * 0.5);
            inline-size: calc(var(--radio-size) * 0.5);
            border-radius: 50%;
            background-color: var(--color-white);

            /* animation */
            transition-property: opacity;
            transition-duration: var(--tt-duration, var(--default-transition-duration));
            transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));
        }

        &:checked {
            background-color: var(--color-blue-400);

            &::before {
                opacity: 1;
            }
        }

        /* disabled */
        &:is(:disabled, [disabled]) {
            cursor: not-allowed;
            /* colors */
            border-color: color-mix(in oklab, var(--color-black) 5%, transparent);
            background-color: var(--color-neutral-100);
            box-shadow: none;

            &:checked {
                border-color: color-mix(in oklab, var(--color-black) 15%, transparent);
    
                &::before {
                    background-color: var(--color-neutral-400);
                }
            }

            label:has(&) {
                color: var(--color-neutral-400);
            }
        }

        /* focus */
        &:focus-visible {
            outline-width: 2px;
            border-color: var(--radio-focus-border);
        }

        /* enclosing label */
        label:has(&) {
            /* layout */
            cursor: pointer;
            display: inline-flex;
            align-items: start;
            justify-content: start;
            gap: --spacing(2);

            /* typography */
            line-height: var(--text-3xl--line-height);
        }

        /* invalid */
        &.radio-validate:invalid,
        &.radio-invalid:not(:checked) {
            /* colors */
            border-color: var(--radio-invalid-border);
            background-color: var(--radio-invalid-bg);
        }
    }

    .radio-inline {
        display: flex;
        flex-direction: row;
        gap: --spacing(4);
    }

    .radio-list {
        display: flex;
        flex-direction: column;
        gap: --spacing(2);
    }

    /* variations */
    .radio-outline {
        /* colors */
        border-color: var(--radio-outline-border);
        box-shadow: none;
        background: none;

        /* disabled */
        &:is(:disabled, [disabled]) {
            border-color: var(--radio-outline-disabled-border);
            background: none;
        }

        &::before {
            background-color: var(--color-blue-400);
        }

        &:checked {
            border-color: var(--color-blue-400);
            background: none;
        }
    }

    .radio-solid {
        /* colors */
        border: none;
        box-shadow: none;
        background-color: var(--color-neutral-200);

        /* disabled */
        &:is(:disabled, [disabled]) {
            background-color: var(--color-neutral-300);
        }
    }

    /* sizes */
    .radio-xs {
        --radio-size: --spacing(3.5);
    }

    .radio-sm {
        --radio-size: --spacing(4);
    }

    .radio-lg {
        --radio-size: --spacing(6);
    }

    .radio-xl {
        --radio-size: --spacing(7);
    }
}