/*
Alert component styles.

@description Provides a flexible, customizable alert component for displaying notifications, warnings, and status messages with consistent styling.

@layer components - Applies styles at the component layer of the CSS cascade.

@property {string} --alert-bg - Background color of the alert
@property {string} --alert-fg - Text color of the alert content
@property {string} --alert-border - Border color of the alert
@property {string} --alert-color - Base color that influences background, text, and border colors
@property {string} --alert-soft-bg - Background color of the alert for soft variant
*/
@layer components {
    .alert {
        /* modifiers */
        --alert-bg: var(--alert-color, var(--color-base));
        --alert-fg: var(--color-base-foreground);
        --alert-soft-bg: light-dark(
            color-mix(in oklab, var(--alert-color) 10%, var(--color-base-background)),
            color-mix(in oklab, var(--alert-color) 40%, var(--color-base-background))
        );
        --alert-border: color-mix(in oklab, var(--alert-color, var(--color-base-border)), transparent 15%);
        --alert-border-width: calc(var(--border-width) * 1);
        --alert-size: --spacing(16);

        /* layout */
        /* position: relative; */
        display: flex;
        align-items: center;
        gap: --spacing(2);

        /* dimensions */
        min-block-size: var(--alert-size);
        inline-size: 100%;
        margin-block-end: --spacing(4);
        padding-inline: --spacing(4);

        /* colors */
        border: var(--alert-border-width) solid var(--alert-border);
        border-radius: var(--radius-control);
        background-color: var(--alert-bg);
        box-shadow: var(--shadow-low);
        color: var(--alert-fg);

        /* icons */
        :where(svg, img, i) {
            block-size: 1.25em;
            min-inline-size: 1.25em;
            color: var(--alert-fg);
        }

        /* content */
        :where(span, div) {
            flex-grow: 1;
            padding-block: --spacing(4);
        }

        /* animation */
        transition-property: background-color, border-color, box-shadow, color, display, opacity;
        transition-behavior: allow-discrete;
        transition-duration: var(--tt-duration, var(--default-transition-duration));
        transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));

        /* x close button */
        input.alert-close[type="radio"] {
            appearance: none;

            &::after {
                content: "";
                mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" /></svg>');
                mask-repeat: no-repeat;
                mask-type: alpha;
                background-color: currentColor;
                color: var(--alert-fg, var(--color-base-dense));
                block-size: --spacing(5);
                inline-size: --spacing(5);
            }
        }

        &:has(input.alert-close[type="radio"]) {
        }

        &:has(input.alert-close[type="radio"]:checked) {
            display: none;
            opacity: 0;
            visibility: none;
        }
    }

    /* colors */
    .alert-primary {
        --alert-color: var(--color-primary);
        --alert-fg: var(--color-primary-content);
    }
    .alert-accent {
        --alert-color: var(--color-accent);
        --alert-fg: var(--color-accent-content);
    }
    .alert-success {
        --alert-color: var(--color-success);
        --alert-fg: var(--color-success-content);
    }
    .alert-warning {
        --alert-color: var(--color-warning);
        --alert-fg: var(--color-warning-content);
    }
    .alert-danger {
        --alert-color: var(--color-danger);
        --alert-fg: var(--color-danger-content);
    }

    /* variants */
    .alert-soft {
        --alert-bg: var(--alert-soft-bg, var(--color-base));
        --alert-fg: var(--alert-color, var(--color-base-foreground));
        --alert-border: transparent;
    }

    /* outline styles */
    .alert-outline,
    .alert-outline-bold,
    .alert-dashed,
    .alert-dashed-bold,
    .alert-dotted,
    .alert-dotted-bold {
        --alert-fg: var(--alert-color, var(--color-base-foreground));
        --alert-border: var(--alert-color, var(--color-base-border));

        &:not(.alert-soft) {
            box-shadow: none;
            --alert-bg: var(--color-base-background);
        }
    }

    .alert-dashed,
    .alert-dashed-bold {
        border-style: dashed;
    }

    .alert-dotted,
    .alert-dotted-bold {
        border-style: dotted;
    }

    .alert-outline-bold,
    .alert-dashed-bold,
    .alert-dotted-bold {
        border-width: calc(var(--border-width) * 2);
    }
}