/*
Button component styles.

@description Provides a flexible, customizable button component with various styles, sizes, and states for interactive elements across the interface.

@layer components - Applies styles at the component layer of the CSS cascade.

@property {string} --btn-bg - Background color of the button
@property {string} --btn-fg - Text color of the button
@property {string} --btn-color - Base color that influences background, text, and border colors
@property {string} --btn-size - Controls the overall size of the button
@property {string} --btn-radius - The rounded corner radius of the button
@property {string} --btn-shadow - Box shadow applied to the button
@property {string} --btn-border-width - Width of the button border
@property {string} --btn-border-style - Style of the button border (solid, dashed)
@property {string} --btn-border - Border color of the button
@property {string} --btn-focus-outline - Outline color when button is focused
@property {string} --btn-soft-bg - Background color of the button for soft variant
*/
@layer components {
    .btn {
        /* modifiers */
        --btn-bg: var(--btn-color, var(--color-base));
        --btn-fg: var(--color-base-foreground);
        --btn-soft-bg: color-mix(in oklab, var(--btn-color, var(--color-base-dense)) 12%, transparent);
        --btn-border-width: 1px;
        --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-border)), var(--color-black) 12%);
        --btn-size: --spacing(10);

        --join-border-width: var(--btn-border-width);

        /* layout */
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: --spacing(2);

        /* dimensions */
        block-size: var(--btn-size);
        min-inline-size: var(--btn-size);
        padding-inline: calc(var(--btn-size) / 4);

        /* typography */
        overflow: hidden;
        text-wrap: nowrap;
        text-decoration: none;
        font-size: calc(var(--btn-size) * 0.4);
        line-height: 1.25;

        /* colors */
        border-width: var(--btn-border-width);
        border-style: var(--btn-border-style, solid);
        border-color: var(--btn-border);
        border-radius: var(--btn-radius, var(--radius-control));
        outline: 0px solid var(--btn-focus-outline, var(--color-accent));
        outline-offset: 1px;
        background-color: var(--btn-bg);
        box-shadow:
            var(--btn-shadow, var(--shadow-low))
            ,inset 0 1px 0 0 color-mix(in oklab, var(--color-white) 25%, transparent)
            ;
        color: var(--btn-fg);

        /* animation */
        transition-property: background-color, border-color, box-shadow, color, outline;
        transition-duration: var(--tt-duration, var(--default-transition-duration));
        transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));

        /* states */
        @media (hover: hover) {
            &:hover {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base)), var(--color-black) 6%);

            }
        }

        &:focus-visible {
            outline-width: 2px;
        }

        &:is(:active, .btn-active),
        &:is(.btn-toggle, .tab):has(input:checked):not(:hover),
        .menu &:is(:focus):not(:focus-visible) {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base)), var(--color-black) 12%);
            --btn-shadow: none;
        }

        &:where(:disabled, [disabled], .btn-disabled) {
            pointer-events: none;
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base)), transparent 60%);
            border-color: color-mix(in oklab, var(--btn-border), transparent 80%);
            color: color-mix(in oklab, var(--btn-color, var(--color-base-foreground)), transparent 40%);
        }
    }

    /* colors */
    .btn-primary {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
    }

    .btn-accent {
        --btn-color: var(--color-accent);
        --btn-fg: var(--color-accent-content);
    }

    .btn-danger {
        --btn-color: var(--color-danger);
        --btn-fg: var(--color-danger-content);
    }

    .btn-warning {
        --btn-color: var(--color-warning);
        --btn-fg: var(--color-warning-content);
    }

    .btn-success {
        --btn-color: var(--color-success);
        --btn-fg: var(--color-success-content);
    }

    /* variants */
    .btn-icon:has(svg:only-child, img:only-child, i:only-child) {
        padding-inline: 0;
    }

    .btn-toggle {
        input {
            appearance: none;
            display: none;
            visibility: hidden;
        }

        &:has(input:not(:checked)) > :is(.btn-toggled-icon),
        &:has(input:checked) > :not(.btn-toggled-icon) {
            display: none;
            visibility: hidden;
        }
    }

    .btn-pill {
        --btn-radius: calc(infinity * 1px);
    }

    .btn-round {
        inline-size: var(--btn-size);
        --btn-radius: calc(infinity * 1px);
    }

    .btn-link {
        --btn-size: fit-content;
        --btn-bg: none;
        --btn-fg: var(--btn-color, var(--color-base-foreground));
        --btn-border: transparent;
        --btn-shadow: none;

        @media (hover: hover) {
            &:hover {
                --btn-bg: none;
                --btn-fg: color-mix(in oklab, var(--btn-color, var(--color-base-foreground)), var(--color-black) 10%);
                text-decoration: underline;
            }
        }
        &:is(:active, .btn-active) {
            --btn-bg: none;
            --btn-fg: color-mix(in oklab, var(--btn-color, var(--color-base-foreground)), var(--color-black) 30%);
            text-decoration: underline;
        }
    }

    .btn-clear {
        --btn-border: transparent;
        --btn-shadow: none;

        &:not(:hover, :active, .btn-active) {
            --btn-bg: none;
            --btn-fg: var(--btn-color, var(--color-base-foreground));
        }
        @media (hover: none) {
            &:not(:active, .btn-active) {
                --btn-bg: none;
                --btn-fg: var(--btn-color, var(--color-base-foreground));
            }
        }
        @media (hover: hover) {
            &:hover:not(:active) {
                --btn-bg: var(--btn-soft-bg);
                --btn-fg: var(--btn-color, var(--color-base-foreground));
            }
        }
    }

    .btn-soft {
        --btn-border: transparent;

        &:not(:hover, :active, .btn-active) {
            --btn-bg: var(--btn-soft-bg);
            --btn-fg: var(--btn-color, var(--color-base-foreground));
            --btn-shadow: none;
        }
        @media (hover: none) {
            &:not(:active, .btn-active) {
                --btn-bg: var(--btn-soft-bg);
                --btn-fg: var(--btn-color, var(--color-base-foreground));
                --btn-shadow: none;
            }
        }
    }

    .btn-outline,
    .btn-outline-bold,
    .btn-dashed,
    .btn-dashed-bold {
        --btn-shadow: none;

        @media (hover: hover) {
            &:hover:not(:active, .btn-active) {
                --btn-bg: var(--btn-soft-bg);
                --btn-fg: var(--btn-color, var(--color-base-foreground));
            }
        }
        &:not(:hover, :active, .btn-active) {
            --btn-bg: none;
            --btn-fg: var(--btn-color, var(--color-base-foreground));
            --btn-border: var(--btn-color, var(--color-base-border));
        }
        @media (hover: none) {
            &:not(:active, .btn-active) {
                --btn-bg: none;
            --btn-fg: var(--btn-color, var(--color-base-foreground));
                --btn-border: var(--btn-color, var(--color-base-border));
            }
        }
    }

    .btn-outline-bold,
    .btn-dashed-bold {
        --btn-border-width: 2px;
    }

    .btn-dashed,
    .btn-dashed-bold {
        --btn-border-style: dashed;
    }

    /* sizes */
    .btn-xs {
        --btn-size: --spacing(8);
    }
    .btn-sm {
        --btn-size: --spacing(9);
    }
    .btn-lg {
        --btn-size: --spacing(11);
    }
    .btn-xl {
        --btn-size: --spacing(12);
    }
    .btn-2xl {
        --btn-size: --spacing(13);
    }
    .btn-wide {
        min-inline-size: --spacing(64);
    }
    .btn-block {
        inline-size: 100%;
    }

    /* icons */
    svg, img, i {
        .btn & {
            block-size: 1.25em;
            min-inline-size: 1.25em;
        }
    }

    /* join */
    @media (hover: hover) {
        .join-row > .btn:has(+ .btn:is(.btn-outline, .btn-outline-bold, .btn-dashed, .btn-dashed-bold)) {
            &:hover {
                & + .btn {
                    border-inline-start-color: transparent;
                }
            }
        }
        .join-col > .btn:has(+ .btn:is(.btn-outline, .btn-outline-bold, .btn-dashed, .btn-dashed-bold)) {
            &:hover {
                & + .btn {
                    border-block-start-color: transparent;
                }
            }
        }
    }
}