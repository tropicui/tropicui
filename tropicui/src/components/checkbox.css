/*
Checkbox component styles.

@description Provides a flexible, customizable checkbox component with various states, sizes, and styles for form inputs with consistent styling.

@layer components - Applies styles at the component layer of the CSS cascade.

@property {string} --checkbox-size - Controls the overall size of the checkbox
@property {string} --checkbox-bg - Background color of the checkbox
@property {string} --checkbox-shadow - Shadow of the checkbox
@property {string} --checkbox-border - Border color of the checkbox
@property {string} --checkbox-color - Color of the checkbox that will affect the background and border
@property {string} --checkbox-focus-outline - Outline color when checkbox is focused
@property {string} --checkbox-focus-border - Border color when checkbox is focused
@property {string} --checkbox-checked-color - Color of the checkbox that will affect the checkmark
@property {string} --checkbox-checked-outline - Border color of the checkbox for outline variant when checked
@property {string} --checkbox-invalid-bg - Background color when checkbox is invalid
@property {string} --checkbox-invalid-border - Border color when checkbox is invalid
*/
@layer components {
    .checkbox {
        /* modifiers */
        --checkbox-size: --spacing(4.5);
        --checkbox-bg: var(--color-base);
        --checkbox-shadow: var(--shadow-low);

        --checkbox-focus-outline: color-mix(in oklab, var(--color-accent) 40%, transparent);
        --checkbox-focus-border: var(--color-accent);

        --checkbox-invalid-bg: color-mix(in oklab, var(--color-danger) 25%, var(--color-base-background));
        --checkbox-invalid-border: var(--color-danger);

        /* layout */
        appearance: none;
        cursor: pointer;

        /* dimensions */
        block-size: var(--checkbox-size);
        min-inline-size: var(--checkbox-size);
        max-inline-size: var(--checkbox-size);

        /* colors */
        border: 1px solid var(--checkbox-border, color-mix(in oklab, var(--color-base-dense) 50%, transparent));
        border-radius: var(--radius-input);
        outline: 0px solid var(--checkbox-focus-outline);
        outline-offset: 0px;
        background-color: var(--checkbox-bg);
        box-shadow: var(--checkbox-shadow);

        /* animation */
        transition-property: background-color, border-color, box-shadow, outline;
        transition-duration: var(--tt-duration, var(--default-transition-duration));
        transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));

        /* check mark */
        &::before {
            /* layout */
            content: "";
            clip-path: polygon(90% 26%, 41% 90%, 10% 54%, 21% 42%, 40% 65%, 79% 15%);
            opacity: 0;
            display: block;

            /* dimensions */
            block-size: 100%;
            inline-size: 100%;

            /* colors */
            background-color: var(--checkbox-checked-color, var(--color-base-background));

            /* animation */
            transition-property: background-color, opacity;
            transition-duration: var(--tt-duration, var(--default-transition-duration));
            transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));
        }

        /* hover */
        @media (hover: hover) {
            &:hover {
                background-color: color-mix(in oklab, var(--checkbox-bg), var(--color-base-foreground) 6%);
                --checkbox-checked-outline: color-mix(in oklab, var(--color-base-dense), var(--color-base) 20%);
            }
        }

        /* active */
        &:active {
            background-color: color-mix(in oklab, var(--checkbox-bg), var(--color-base-foreground) 12%);
            --checkbox-shadow: none;
            --checkbox-checked-outline: color-mix(in oklab, var(--color-base-dense), var(--color-base) 40%);
        }

        /* indeterminate */
        &:indeterminate::before {
            clip-path: polygon(10% 40%, 90% 40%, 90% 60%, 10% 60%);
        }

        /* checked */
        &:is(:checked, :indeterminate) {
            --checkbox-bg: var(--checkbox-color, var(--color-base-dense));
            --checkbox-checked-outline: var(--checkbox-checked-color);

            /* check mark */
            &::before {
                opacity: 1;
            }
        }

        /* disabled */
        &:is(:disabled, [disabled]) {
            /* layout */
            cursor: not-allowed;

            /* colors */
            background-color: color-mix(in oklab, var(--checkbox-bg) 40%, var(--color-base-background));
            border-color: color-mix(in oklab, var(--checkbox-border, var(--color-base-dense)) 30%, transparent);
            --checkbox-shadow: none;

            /* check mark */
            &::before {
                background-color: color-mix(in oklab, var(--checkbox-checked-color, var(--color-base)) 50%, var(--color-base));
            }
        }

        /* focus */
        &:focus-visible {
            /* colors */
            outline-width: 2px;
            --checkbox-border: var(--checkbox-focus-border);
        }

        /* validate */
        &.checkbox-validate:user-invalid,
        &.checkbox-invalid:not(:checked) {
            /* colors */
            --checkbox-bg: var(--checkbox-invalid-bg);
            --checkbox-border: var(--checkbox-invalid-border);
        }

        /* enclosing label */
        label:has(&) {
            /* layout */
            cursor: pointer;
            display: inline-flex;
            align-items: start;
            justify-content: start;
            gap: --spacing(2);

            /* typography */
            line-height: var(--text-3xl--line-height);
        }
    }

    .checkbox-inline {
        /* layout */
        display: flex;
        flex-direction: row;
        gap: --spacing(4);
    }

    .checkbox-list {
        /* layout */
        display: flex;
        flex-direction: column;
        gap: --spacing(4);
    }

    /* variations */
    .checkbox.checkbox-outline,
    .checkbox.checkbox-outline-bold {
        /* colors */
        --checkbox-bg: none;
        --checkbox-shadow: none;
        --checkbox-checked-color: var(--checkbox-color, var(--color-base-dense));
        --checkbox-border: var(--checkbox-checked-outline, var(--color-base-dense));
    }

    .checkbox-outline-bold {
        border-width: 2px;
    }

    .checkbox-solid {
        /* colors */
        --checkbox-bg: var(--color-base-border);
        --checkbox-border: transparent;
        --checkbox-shadow: none;
    }

    /* colors */
    .checkbox-primary {
        --checkbox-color: var(--color-primary);
        --checkbox-checked-color: var(--color-primary-content);
    }
    .checkbox-accent {
        --checkbox-color: var(--color-accent);
        --checkbox-checked-color: var(--color-accent-content);
    }
    .checkbox-warning {
        --checkbox-color: var(--color-warning);
        --checkbox-checked-color: var(--color-warning-content);
    }
    .checkbox-success {
        --checkbox-color: var(--color-success);
        --checkbox-checked-color: var(--color-success-content);
    }
    .checkbox-danger {
        --checkbox-color: var(--color-danger);
        --checkbox-checked-color: var(--color-danger-content);
    }

    /* sizes */
    .checkbox-xs {
        --checkbox-size: --spacing(3.5);

        label:has(&) {
            font-size: var(--text-xs);
        }
    }

    .checkbox-sm {
        --checkbox-size: --spacing(4);

        label:has(&) {
            font-size: var(--text-sm);
        }
    }

    .checkbox-lg {
        --checkbox-size: --spacing(6);

        label:has(&) {
            font-size: var(--text-lg);
            line-height: var(--text-2xl--line-height);
        }
    }

    .checkbox-xl {
        --checkbox-size: --spacing(7);

        label:has(&) {
            font-size: var(--text-xl);
            line-height: var(--text-xl--line-height);
        }
    }

    .checkbox-2xl {
        --checkbox-size: --spacing(8);

        label:has(&) {
            font-size: var(--text-2xl);
            line-height: var(--text-2xl--line-height);
        }
    }
}