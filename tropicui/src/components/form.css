/*
Form component and field styles.

@description Provides a flexible form component with field styles for various input types.

@layer components - Applies styles at the component layer of the CSS cascade.
*/
@layer components {
    .form {
        --field-gap: --spacing(8);

        .form-field,
        .form-field-inline {
            /* modifiers */
            /* --field-cols: 1; */

            /* layout */
            display: grid;
            grid-template-columns: minmax(0, 1fr);
            align-content: start;
            align-items: baseline;
            gap: --spacing(2);

            &:has(+ &) {
                margin-block-end: var(--field-gap);
            }
        }

        .form-field-inline {
            /* --field-cols: 3; */
            grid-template-columns: minmax(calc(var(--container-3xs) / 2), 35%) minmax(var(--container-3xs), 1fr);
        }

        &.form-compact {
            --field-gap: --spacing(4);
        }

        .form-helper {
            /* layout */
            display: block;

            /* dimensions */
            margin-block: --spacing(1);

            /* color */
            color: color-mix(in oklab, currentColor, var(--color-base-background) 50%);

            /* show invalid class when input invalid */
            &.invalid {
                opacity: 0;

                /* color */
                color: var(--color-danger);

                :where(.form-field:has(:user-invalid, [class*="-invalid"])) & {
                    opacity: 1;
                }

                /* animation */
                transition-property: opacity;
                transition-duration: var(--tt-duration, var(--default-transition-duration));
                transition-timing-function: var(--tt-ease-out, var(--default-transition-timing-function));
            }
        }

        .fieldset {
            /* dimension */
            padding-block: --spacing(4);
            padding-inline: --spacing(4);

            /* color */
            background-color: var(--color-base-airy);
            border-radius: var(--radius-md);
            border: 1px solid var(--color-base-border);
            box-shadow: var(--shadow-xs);

            legend {
                padding-inline: --spacing(1);

                color: var(--color-base-content);
                font-weight: var(--font-weight-medium);
                font-size: var(--text-lg);
                line-height: var(--text-lg--line-height);
            }

            &.fieldset-outline {
                background: none;
                box-shadow: none;

                legend {
                    padding-inline: --spacing(0);
                }
            }
            &.fieldset-solid {
                border-width: 0px;
                background-color: var(--color-base);
            }
        }

        .label {
            display: flex;
            align-items: center;
            gap: --spacing(1);

            /* typography */
            font-weight: var(--font-weight-medium);

            svg, img, i {
                block-size: 1.25em;
                min-inline-size: 1.25em;
            }
        }
    }

    label {
        &:has(:disabled, [disabled]) {
            cursor: not-allowed;
            color: color-mix(in oklab, currentColor, transparent 40%);
        }
    }
}