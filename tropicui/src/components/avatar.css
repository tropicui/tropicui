/*
Avatar component styles.

@description Provides a flexible, customizable avatar component for displaying user images, initials, or icons with consistent styling.

@layer components - Applies styles at the component layer of the CSS cascade.

@property {string} --avatar-bg - Background color of the avatar
@property {string} --avatar-fg - Foreground text color of the avatar
@property {string} --avatar-color - Base color that influences background colors and outline colors
@property {string} --avatar-active - Color of the avatar outline when active
@property {string} --avatar-ring - Color of the avatar outline
@property {string} --avatar-size - Controls the overall size of the avatar
@property {string} --avatar-border-radius - The rounded corner radius of the avatar
@property {string} --avatar-group-gap - The gap between avatars in a group
*/
@layer components {
    .avatar {
        /* modifiers */
        --avatar-bg: var(--avatar-color, var(--color-base-airy));
        --avatar-size: --spacing(10);
        --avatar-border-radius: var(--radius-control);
        --avatar-group-gap: 3;
        --avatar-active: var(--color-accent);
        --avatar-ring: var(--avatar-color, var(--color-base-border));

        /* layout */
        align-content: center;
        text-align: center;
        position: relative;
        
        /* dimension */
        block-size: var(--avatar-size);
        inline-size: var(--avatar-size);
        min-inline-size: var(--avatar-size);

        /* color */
        border: 2px solid var(--color-base-background);
        border-radius: var(--avatar-border-radius);
        background-color: var(--avatar-bg);
        color: var(--avatar-fg, var(--color-base-foreground));

        /* typography */
        font-weight: var(--font-weight-medium);
        font-size: calc(var(--avatar-size) * 0.4);
        line-height: 1;
        text-transform: uppercase;
        overflow: hidden;

        /* Avatar image */
        img {
            block-size: 100%;
            inline-size: 100%;
            object-fit: cover;
            object-position: center;
        }
    }

    /* variants */
    .avatar-circle {
        --avatar-border-radius: calc(infinity * 1px);
    }

    /* sizes */
    .avatar-xs {
        --avatar-size: --spacing(6);
    }

    .avatar-sm {
        --avatar-size: --spacing(8);
    }

    .avatar-lg {
        --avatar-size: --spacing(12);
    }

    .avatar-xl {
        --avatar-size: --spacing(16);
        border-width: 3px;
    }

    /* with border */
    .avatar-active {
        outline: 2px solid var(--avatar-active);
    }

    .avatar-ring {
        outline: 1px solid var(--avatar-ring);
    }

    /* colors */
    .avatar-primary {
        --avatar-color: var(--color-primary);
        --avatar-fg: var(--color-primary-content);
    }

    .avatar-accent {
        --avatar-color: var(--color-accent);
        --avatar-fg: var(--color-accent-content);
    }

    .avatar-success {
        --avatar-color: var(--color-success);
        --avatar-fg: var(--color-success-content);
    }

    .avatar-danger {
        --avatar-color: var(--color-danger);
        --avatar-fg: var(--color-danger-content);
    }

    .avatar-warning {
        --avatar-color: var(--color-warning);
        --avatar-fg: var(--color-warning-content);
    }

    /* avatar group */
    .avatar-group,
    .avatar-group-compact {
        display: flex;

        .avatar {
            margin-inline-start: calc(var(--avatar-size) / var(--avatar-group-gap) * -1);

            &:first-child {
                margin-inline-start: 0;
            }
        }
    }
    .avatar-group-compact {
        .avatar {
            --avatar-group-gap: 1.5;
        }
    }
}