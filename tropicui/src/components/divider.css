/*
Divider component styles.

@description Provides a flexible, customizable divider component for separating content sections with optional text labels and various styling options.

@layer components - Applies styles at the component layer of the CSS cascade.

@property {string} --divider-border - Color of the divider line
@property {string} --divider-color - Base color that influences the divider appearance
@property {string} --divider-width - Thickness of the divider line
@property {string} --divider-start - Width/height of the divider before content
@property {string} --divider-end - Width/height of the divider after content
@property {string} --divider-grid - Grid template columns for the divider

*/
@layer components {
    .divider {
        /* modifiers */
        --divider-border: var(--divider-color, var(--color-base-border));
        --divider-width: var(--border-width);
        --divider-start: 1fr;
        --divider-end: 1fr;
        --divider-grid: var(--divider-start) auto var(--divider-end);

        /* layout */
        display: grid;
        grid-template-columns: var(--divider-grid);
        align-items: center;
        gap: --spacing(4);

        /* typography */
        white-space: nowrap;
        color: var(--divider-color, var(--color-base-foreground));

        /* bar */
        &::before,
        &::after {
            content: '';
            border-block-end-width: var(--divider-width);
            border-inline-start-width: var(--divider-width);
            border-color: var(--divider-border);
        }

        &:where(:empty) {
            --divider-grid: var(--divider-start) var(--divider-end);
            gap: --spacing(0);
        }
    }

    /* direction */
    .divider-vertical {
        &.divider {
            grid-template-columns: none;
            grid-template-rows: var(--divider-grid);
            align-items: normal;
            align-self: stretch;
            justify-items: center;

            block-size: auto;
        }
    }

    /* variants */
    .divider-dashed {
        &::before,
        &::after {
            border-style: dashed;
        }
    }

    .divider-dotted {
        &::before,
        &::after {
            border-style: dotted;
        }
    }

    /* colors */
    .divider-primary {
        --divider-color: var(--color-primary);
    }
    .divider-accent {
        --divider-color: var(--color-accent);
    }
    .divider-success {
        --divider-color: var(--color-success);
    }
    .divider-warning {
        --divider-color: var(--color-warning);
    }
    .divider-danger {
        --divider-color: var(--color-danger);
    }

    .divider-subtle {
        --divider-border: light-dark(
            color-mix(in oklab, var(--divider-color, var(--color-base-border)) 20%, var(--color-base-background)),
            color-mix(in oklab, var(--divider-color, var(--color-base-border)) 40%, var(--color-base-background))
        );
        color: color-mix(in oklab, var(--divider-color, var(--color-base-foreground)) 60%, var(--color-base-background));
    }

    /* thickness */
    .divider-thin {
        --divider-width: calc(var(--border-width) / 2);
    }
    .divider-bold {
        --divider-width: calc(var(--border-width) * 2);
    }
    .divider-thick {
        --divider-width: calc(var(--border-width) * 3);
    }
    .divider-thicker {
        --divider-width: calc(var(--border-width) * 4);
    }

    /* content alignment */
    .divider-start {
        --divider-grid: auto var(--divider-end);

        &::before {
            content: none;
        }
    }
    .divider-end {
        --divider-grid: var(--divider-start) auto;

        &::after {
            content: none;
        }
    }

    .divider-start-xs {
        --divider-start: 5%;
    }
    .divider-start-sm {
        --divider-start: 10%;
    }
    .divider-start-md {
        --divider-start: 20%;
    }
    .divider-start-lg {
        --divider-start: 30%;
    }
    .divider-start-xl {
        --divider-start: 40%
    }

    .divider-end-xs {
        --divider-end: 5%;
    }
    .divider-end-sm {
        --divider-end: 10%;
    }
    .divider-end-md {
        --divider-end: 20%;
    }
    .divider-end-lg {
        --divider-end: 30%;
    }
    .divider-end-xl {
        --divider-end: 40%
    }

    /* icons */
    svg, img, i {
        .divider & {
            block-size: 1.25em;
            min-inline-size: 1.25em;
        }
    }
}

@utility divider-start-* {
    --divider-start: --value([*]);
    --divider-start: calc(var(--spacing) * --value(integer));
}

@utility divider-end-* {
    --divider-end: --value([*]);
    --divider-end: calc(var(--spacing) * --value(integer));
}

@utility divider-* {
    --divider-width: --value(integer)px;
}